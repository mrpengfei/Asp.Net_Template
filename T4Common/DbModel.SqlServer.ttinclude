<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="System.Data" #>
<#@ Assembly Name="System.Windows.Forms" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
<#@ import namespace="System.Data.SqlClient" #> 

<#+ 
	class SqlServerDbModelManager:IDisposable
	{
		private readonly SqlConnection conn;
        public SqlServerDbModelManager (string connStr)
        {
			this.conn = new SqlConnection(connStr);
            if (conn.State != ConnectionState.Open)
            {
                conn.Open();
            }
        }

		public void Dispose()
        {
            this.conn.Dispose();
        }

		public IList<TableModel> GetTables()
        {
            var list = new List<TableModel>();
            using (var cmd = this.conn.CreateCommand())
            {
                cmd.CommandText = @" select [name] from sys.tables where [type]='U' ";
                using (var reader = cmd.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        var tableName = reader.GetString(0);
                        list.Add(new TableModel { Name = tableName });
                    }
                }
            }
            return list;
        }

		public IList<ColumnModel> GetColumns(string table)
        {
			var list = new List<ColumnModel>();
            using (var cmd = this.conn.CreateCommand())
            {
                cmd.CommandText = string.Format(@"
				select 
					c.name TableName,
					t.name TypeName,
					c.is_nullable,
					(case when k.COLUMN_NAME is null then 0 else 1 end) primaryKey
					 from sys.columns c
					 inner join sys.types t on C.system_type_id = t.system_type_id	and c.user_type_id = t.user_type_id
					left join INFORMATION_SCHEMA.KEY_COLUMN_USAGE k on c.name = k.COLUMN_NAME and k.TABLE_NAME = '{0}'
				where object_id = OBJECT_ID('{0}')
				",table);
                using (var reader = cmd.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        list.Add(new ColumnModel 
						{
							Name = reader.GetString(0),
							Type = GetCSharpType(reader.GetString(1)),
							NotNull = reader.GetBoolean(2),
							Pk = reader.GetInt32(3)>0,
						});
                    }
                }
            }
            return list;
		}


		private string GetCSharpType(string dbType,bool notNull=true)
		{
			var result = "string";
            switch (dbType)
            {
				case "int":
					return IsNullType("int",notNull);
				case "datetime":
					return IsNullType("DateTime",notNull);
				case "decimal":
					return IsNullType("decimal",notNull);
				case "bit":
					return IsNullType("bool",notNull);
                default:
				return result;
            }
		}

		private string IsNullType(string type,bool notNull=true){
            if (notNull)
            {
				return type;
            }
			return type+"?";
		}
	}

	class TableModel 
	{
        public string Name { get; set; }
	}

	class ColumnModel
    {
        public string Name { get; set; }

        public string Type { get; set; }

		public bool NotNull {get;set;}

        public bool Pk { get; set; }
	}
#>

<#+ 
	public string GetClassName(string name,string prefix="Entity")
	{
        if (string.IsNullOrEmpty(name))
        {
			return name;
        }
		return name.Substring(0,1).ToUpper()+name.Remove(0,1)+prefix;
	}

	public string GetConnString(string name="")
    {
		return "Database=DaiShuCrmDB3.0;User ID=sa;Password=daishu360!@#abc;Application Name=DaiShu-Crm-Api; Server=211.157.135.187;Connect Timeout=30;";
    }
#>